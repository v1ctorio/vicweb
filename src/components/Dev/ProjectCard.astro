---
const { title, description, GHlink, img, VisitLink, Installlink, Trylink } = Astro.props;
---
<div class="project">
    <h2>{title}</h2>
    <p>
    {description}
</p>
<div class="image-skeleton"></div>
    {img && <img
    src={img}
    class="hola"
    alt="Latest screenshot"
    loading="lazy" 
    >   }
    <div class="links">        
        {GHlink && <a href={GHlink}>Source</a>}
        {VisitLink && <a href={VisitLink}>Visit</a>}
        {Installlink && <a href={Installlink}>Install</a>}
        {Trylink && <a href={Trylink}>Try</a>}
    </div> 
</div>
<style>
    .project {
        margin-top: 20px;
        border-color: red;
        border-width: 10px;
        display: flex;
        flex-direction: column;
		    justify-content: center;
        background-color: var(--white-ola);
        border-radius: 10px;
        padding: 10px;
        width: 300px;
        height: 400px;
    }
    .project * {
        padding: 10px;
    }
    .hola {
        border-radius: 10px;
        width: 270px;
        height: 210px;
        object-fit: contain;
        opacity: 0;
    }
    .project h2 {
        padding-top: 10px;
    }
    .project p {
        padding-top: 10px;
    }
    .project a {
        text-decoration: none;
        color: rgb(2, 132, 199);
    }
    .image-skeleton {
    max-width: 250px;
    height: 210px;
    background-color: #e0e0e0;
    animation: skeleton-loading 1.5s infinite linear;
    }



  @keyframes skeleton-loading {
    0% {
      background-color: #e0e0e0;
    }
    50% {
      background-color: #f0f0f0;
    }
    100% {
      background-color: #e0e0e0;
    }
  }

  @media (prefers-color-scheme: dark) {
    .project {
      background-color: var(--dark-ola);
    }
    .project a {
      color: rgb(2, 132, 199);
    }
  }
</style>
<script>
document.addEventListener("DOMContentLoaded", function() {
  const images = document.querySelectorAll(".hola");

  images.forEach((i) => {
    const img = i as HTMLImageElement; // Cast to HTMLImageElement
    // Check if the image is already loaded (cached)
    if (img.complete) {
      hideSkeleton(img); // Hide skeleton if image is already loaded
    } else {
      // If not cached, wait for the load event
      img.addEventListener("load", function() {
        hideSkeleton(img);
      });
    }
  });

  // Function to hide skeleton and show the image
  function hideSkeleton(img: HTMLImageElement) {
    if (!img) return;
    (img as any).previousElementSibling.style.display = "none"; // Hide skeleton
    img.style.opacity = "1"; // Show the image
  }

  function showImage(img: HTMLImageElement) {
    img.style.opacity = "1";
  }
});

</script>